import chisel3._
import org.scalatest._
import chiseltest._

object Inst210JRE extends FlatSpec with ChiselScalatestTester with TestUtil {
  def apply(implicit dut: CpuTestTb) {
    // test code starts from $0150.
    dut.clock.step(0x50)

    // skip register initialization.
    dut.clock.step(0x12)

    // jr $7f
    compareReg(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0000, 0x0162, false, false, false, false) // fetch
    compareReg(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0000, 0x0163, false, false, false, false) // read E
    compareReg(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0000, 0x0164, false, false, false, false) // writeback PC
    compareReg(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0000, 0x0165, false, false, false, false) // jump

    // jp $2010
    compareReg(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0000, 0x01e3, false, false, false, false) // fetch
    compareReg(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0000, 0x01e4, false, false, false, false) // decode
    compareReg(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0000, 0x01e5, false, false, false, false) // read msb
    compareReg(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0000, 0x01e6, false, false, false, false) // read lsb

    // ld a, $ff
    compareReg(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0000, 0x0166, false, false, false, false) // fetch
    compareReg(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0000, 0x0167, false, false, false, false) // load data
    compareReg(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0000, 0x0168, false, false, false, false) // writeback
    compareReg(0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0000, 0x0169, false, false, false, false) // check
  }
}
