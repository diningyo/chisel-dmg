import chisel3._
import org.scalatest._
import chiseltest._

object Inst200JPNN extends FlatSpec with ChiselScalatestTester with TestUtil {
  def apply(implicit dut: CpuTestTb) {
    // test code starts from $0150.
    dut.clock.step(0x50)

    // skip register initialization.
    dut.clock.step(0x12)

    // jp $1020
    compareReg(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0000, 0x0162, false, false, false, false) // fetch
    compareReg(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0000, 0x0163, false, false, false, false) // read msb
    compareReg(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0000, 0x0164, false, false, false, false) // read lsb
    compareReg(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0000, 0x0165, false, false, false, false) // make addr
    compareReg(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0000, 0x0166, false, false, false, false) // set addr

    // jp $2010
    compareReg(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0000, 0x1020, false, false, false, false) // fetch
    compareReg(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0000, 0x1021, false, false, false, false) // decode
    compareReg(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0000, 0x1022, false, false, false, false) // read msb
    compareReg(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0000, 0x1023, false, false, false, false) // read lsb
    compareReg(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0000, 0x1024, false, false, false, false) // set addr

    // ld a, $ff
    compareReg(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0000, 0x2010, false, false, false, false) // fetch
    compareReg(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0000, 0x2011, false, false, false, false) // load pc + 1
    compareReg(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0000, 0x2012, false, false, false, false) // writeback
    compareReg(0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0000, 0x2013, false, false, false, false) // check
  }
}
