import chisel3._
import org.scalatest._
import chiseltest._

object Inst004LDHAN extends FlatSpec with ChiselScalatestTester with TestUtil {
  def apply(implicit dut: CpuTestTb) {
    dut.clock.step(0x51)

    // ld a, ($10)               ; a = ($ff10) = $03
    compareReg(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0151, false, false, false, false) // m1
    compareReg(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0151, false, false, false, false) // m2

    // ld a, ($20)               ; a = ($ff20) = $a0
    compareReg(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0152, false, false, false, false) // m1
    compareReg(0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0153, false, false, false, false) // m2
    compareReg(0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0153, false, false, false, false) // m2
    compareReg(0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0154, false, false, false, false) // m2
    compareReg(0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0155, false, false, false, false) // m2
  }
}
